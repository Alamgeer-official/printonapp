definitions:
  models.College:
    properties:
      active:
        type: boolean
      collegeName:
        type: string
      createdOn:
        type: string
      id:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      error:
        type: string
      status:
        type: integer
    type: object
  models.User:
    properties:
      access_token:
        description: AccessToken field without a corresponding gorm tag
        type: string
      active:
        type: boolean
      college:
        $ref: '#/definitions/models.College'
      collegeId:
        type: integer
      created_on:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_verified:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    get:
      description: A simple endpoint to check server status
      produces:
      - application/json
      responses:
        "200":
          description: server is running
          schema:
            type: string
      summary: Test endpoint
      tags:
      - General
  /email-exists:
    get:
      description: Check if an email is already registered
      parameters:
      - description: Email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Check if email exists
      tags:
      - Users
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login
      tags:
      - Users
  /signup:
    post:
      consumes:
      - application/json
      description: Signup a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Create a new user
      tags:
      - Users
  /users:
    get:
      description: Retrieve all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get all users
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get user by ID
      tags:
      - Users
swagger: "2.0"
